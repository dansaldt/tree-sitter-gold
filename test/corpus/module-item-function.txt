=====================
Function - non-parsed
=====================

module Example

proc MyFunction1
end

func MyFunction2 return Boolean
end

---

(source_file
  (module
    name: (identifier)
    (function_item
      name: (identifier)
    )
    (function_item
      name: (identifier)
      (function_return_type
        (type_identifier))
    )
  )
)


==========================
Function - parsed-fn-empty
==========================

module Example

procedure MyFunction1
endProc

function MyFunction2 return Boolean
endFunc

---

(source_file
  (module
    name: (identifier)
    (function_item
      name: (identifier)
    )
    (function_item
      name: (identifier)
      (function_return_type
        (type_identifier))
    )
  )
)


==================
Function - forward
==================

module Example

function MyForwardFunction return Boolean forward

---

(source_file
  (module
    name: (identifier)
    (function_item
      name: (identifier)
      (function_return_type
        (type_identifier))
      (forward_modifiers)
    )
  )
)


===================
Function - override
===================

module Example

procedure MyOverrideFunction override
endProc

procedure MyFinalOverrideFunction final override
endProc

---

(source_file
  (module
    name: (identifier)
    (function_item
      name: (identifier)
      (function_modifiers)
    )
    (function_item
      name: (identifier)
      (function_modifiers)
    )
  )
)


=====================
Function - visibility
=====================

module Example

procedure MyPrivateFunction private
endProc

procedure MyProtectedFunction protected
endProc

---

(source_file
  (module
    name: (identifier)
    (function_item
      name: (identifier)
      (function_modifiers (visibility_modifiers))
    )
    (function_item
      name: (identifier)
      (function_modifiers (visibility_modifiers))
    )
  )
)


===================
Function - external
===================

module Example

procedure MyExternalDllFunction external 'DllName.DllFunctionName'

---

(source_file
  (module
    name: (identifier)
    (function_item
      name: (identifier)
      (function_modifiers_external
        dll_name: (identifier)
        dll_function_name: (identifier)
      )
    )
  )
)


====================
Function - parameter
====================

module Example

procedure FunctionWithSingleParam(
  param0: Int1
)
endProc

procedure FunctionWithMultiParam(
  param0: Int1,
  param1: Int4
)
endProc

procedure FunctionTrailingParamComma(
  param0: Int1,
)
endProc

procedure FunctionWithModifiers(
  var param0: Boolean,
  param1: Int4,
  const param2: Num,
  inOut param3: String
)
endProc

---

(source_file
  (module
    name: (identifier)
    (function_item
      name: (identifier)
      parameters: (function_parameters
        (function_parameter_declaration
          name: (identifier)
          type: (type_identifier)))
    )
    (function_item
      name: (identifier)
      parameters: (function_parameters
        (function_parameter_declaration
          name: (identifier)
          type: (type_identifier))
        (function_parameter_declaration
          name: (identifier)
          type: (type_identifier))
      )
    )
    (function_item
      name: (identifier)
      parameters: (function_parameters
        (function_parameter_declaration
          name: (identifier)
          type: (type_identifier)))
    )
    (function_item
      name: (identifier)
      parameters: (function_parameters
        (function_parameter_declaration
          (function_parameter_modifiers)
          name: (identifier)
          type: (type_identifier))
        (function_parameter_declaration
          name: (identifier)
          type: (type_identifier))
        (function_parameter_declaration
          (function_parameter_modifiers)
          name: (identifier)
          type: (type_identifier))
        (function_parameter_declaration
          (function_parameter_modifiers)
          name: (identifier)
          type: (type_identifier))
      )
    )
  )
)


===============
Function - type
===============

module ExampleFunctionType

[model(SomeAnnotation:true)]
type TheFunction : function (param : Int1) return Boolean

---

(source_file
  (module
    name: (identifier)
    (function_type_item
      (annotation
        (annotation_attribute_list
          (annotation_attribute
            name: (identifier)
            (boolean_literal))))
      name: (type_identifier)
      parameters: (function_parameters
        (function_parameter_declaration
          name: (identifier)
          type: (type_identifier))
      )
      (function_return_type (type_identifier))
    )
  )
)
