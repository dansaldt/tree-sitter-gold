=============
Enum - base
=============

module Example

type BaseEnum : (
	meVariant1,
	meVariant2,
)

---

(source_file
  name: (identifier)
  (enum_item
    name: (type_identifier)
    body: (enum_variant_list
      (enum_variant
        name: (identifier))
      (enum_variant
        name: (identifier))
    )
  )
)


==============
Enum - derived
==============

module DerivedExample

type ChildEnum : BaseEnum + (
	meVariant3,
	meVariant4
)

---

(source_file
  name: (identifier)
  (enum_item
    name: (type_identifier)
	derived: (enum_derived
      type: (type_identifier))
    body: (enum_variant_list
      (enum_variant
        name: (identifier))
      (enum_variant
        name: (identifier))
    )
  )
)


================
Enum - modifiers
================

module ModifiersExample

type ModEnum : (
	meTheOnlyVariant
) multiLang

---

(source_file
  name: (identifier)
  (enum_item
    name: (type_identifier)
    body: (enum_variant_list
      (enum_variant
        name: (identifier))
    )
    (enum_modifiers)
  )
)


============
Enum - value
============

module RedefineValueExample

type ReDefEnumValue : (
	evTheVariant = 10
)

---

(source_file
  name: (identifier)
  (enum_item
    name: (type_identifier)
    body: (enum_variant_list
      (enum_variant
        name: (identifier)
        (enum_variant_redefine_value))
    )
  )
)


================
Enum - annotated
================

module AnnotatedEnumExample

type AnnotatedEnum : (
  [model(Text:'Variant 1')] aeVariant1
)

---

(source_file
  name: (identifier)
  (enum_item
    name: (type_identifier)
    body: (enum_variant_list
      (enum_variant
        (annotation
          (annotation_attribute_list
            (annotation_attribute
              name: (identifier)
              (string_literal))
          )
        )
        name: (identifier)))
  )
)
